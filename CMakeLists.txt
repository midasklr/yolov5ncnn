cmake_minimum_required(VERSION 2.8)

project(yolov5s)

add_definitions(-std=c++11)
add_definitions("-Wall")

#set(OpenCV_DIR "/opt/intel/openvino_2019.3.334/opencv")
find_package(OpenCV 3.4.8 REQUIRED)

if(True)
    find_package(OpenMP)
    if(NOT TARGET OpenMP::OpenMP_CXX AND (OpenMP_CXX_FOUND OR OPENMP_FOUND))
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
    endif()
endif()

include_directories(${OpenCV_DIR}/include
                    ${PROJECT_SOURCE_DIR}/ncnn-20210525-ubuntu-1604-shared/include/ncnn)

link_directories(${OpenCV_DIR}/lib/
                 ${PROJECT_SOURCE_DIR}/ncnn-20210525-ubuntu-1604-shared/lib)
set(OpenCV_LIBS opencv_core 
                opencv_highgui 
                opencv_imgproc 
                opencv_imgcodecs 
                opencv_videoio)

set(SRC
        yolov5.cpp
        )

add_executable(yolov5s ${SRC})
target_link_libraries(yolov5s ncnn ${OpenCV_LIBS})
if(OpenMP_CXX_FOUND)
    if(NCNN_CMAKE_VERBOSE)
        message("Building with OpenMP")
    endif()
    target_link_libraries(yolov5s PUBLIC OpenMP::OpenMP_CXX)
endif()
